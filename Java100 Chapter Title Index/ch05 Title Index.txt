Test1 - ## 키보드로부터 입력 받기 
// - Scanner 클래스를 사용하여 키보드로부터 입력 받는 방법을 알아보자!

Test2 - ## 키보드로부터 입력 받기 II
// - Console 클래스를 사용하여 키보드로부터 입력 받는 방법을 알아보자!

Test3 - ## 키보드로부터 입력 받기 - 활용
// - 키보드 입력을 받아서 처리하는 방법을 알아보자!

Test4 - ## 키보드로부터 입력 받기 - 활용 II
// - 키보드 입력을 받아서 처리하는 방법을 알아보자!

====================================================================================

ex5.Test1 - ## 키보드로부터 입력 받기 - 연습1
// - 다음과 같이 사용자로부터 구구단 번호를 입력 받아 출력하라!
// 1단계: if ~ else if ~ else

ex5.Test2 - ## 키보드로부터 입력 받기 - 연습1
// - 다음과 같이 사용자로부터 구구단 번호를 입력 받아 출력하라!
//2단계: 종료 조건은 if ~ else로, 주 작업은 기본 블록에서 한다.
//        즉 들여쓰기를 최소화 한다.

ex5.Test3 - # 키보드로부터 입력 받기 - 연습1
// - 다음과 같이 사용자로부터 구구단 번호를 입력 받아 출력하라!
// 3단계: 메서드 분리

ex5.Test4 - ## 키보드로부터 입력 받기 - 연습1
// - 다음과 같이 사용자로부터 구구단 번호를 입력 받아 출력하라!
// 4단계: 예외처리 추가

ex5.Test5 - ## 키보드로부터 입력 받기 - 연습1
// - 다음과 같이 사용자로부터 구구단 번호를 입력 받아 출력하라!
// 5단계: 정교하게 예외처리 하기

ex5.Test6 - // ## 키보드로부터 입력 받기 - 연습1
// - 다음과 같이 사용자로부터 구구단 번호를 입력 받아 출력하라!
// 6단계: 예외를 구분하기

====================================================================================

ex6.Test1 - ## 키보드로부터 입력 받기 - 연습2
// - 다음과 같이 사용자로부터 숫자를 입력 받아 각 숫자의 개수를 세시오.
// 1단계: 문제 해결

ex6.Test2 - ## 키보드로부터 입력 받기 - 연습2
// - 다음과 같이 사용자로부터 숫자를 입력 받아 각 숫자의 개수를 세시오.
// 2단계: 메서드를 도입하여 기능에 따라 코드 분리

ex6.Test3 - ## 키보드로부터 입력 받기 - 연습2
// - 다음과 같이 사용자로부터 숫자를 입력 받아 각 숫자의 개수를 세시오.
// 1단계: 문제해결 두 번째 방법 - 입력 문자열을 그대로 이용하기

ex6.Test4 - ## 키보드로부터 입력 받기 - 연습2
// - 다음과 같이 사용자로부터 숫자를 입력 받아 각 숫자의 개수를 세시오.
// 2단계: 문제해결 두 번째 방법 - 메서드를 도입하여 코드 분리하기

====================================================================================

ex7.Test1 - ## 키보드로부터 입력 받기 - 연습3
// - 다음과 같이 사용자로부터 문자(숫자와 알파벳)를 입력 받아 꺼꾸로 변경하시오!
// 1단계: 문제 해결

ex7.Test2 - ## 키보드로부터 입력 받기 - 연습3
// - 다음과 같이 사용자로부터 문자(숫자와 알파벳)를 입력 받아 꺼꾸로 변경하시오!
// 2단계: 기능 별로 코드를 메서드로 분리한다.

====================================================================================

ex8.step1.test -  ## 키보드로부터 입력 받기 - 연습4
// - 다음과 같이 사용자로부터 이름, 이메일, 전화를 입력받아 출력하시오!
// 1단계: 변수를 사용하여 사용자가 입력한 값을 저장한다.

ex8.step2.test - ## 키보드로부터 입력 받기 - 연습4
// - 다음과 같이 사용자로부터 이름, 이메일, 전화를 입력받아 출력하시오!
// 2단계: 배열을 사용하여 여러 개의 값을 저장한다.

ex8.step3.test - ## 키보드로부터 입력 받기 - 연습4
// - 다음과 같이 사용자로부터 이름, 이메일, 전화를 입력받아 출력하시오!
// 3단계: 계속 입력할지 여부를 묻는 기능 추가

ex8.step4.test - ## 키보드로부터 입력 받기 - 연습4
// - 다음과 같이 사용자로부터 이름, 이메일, 전화를 입력받아 출력하시오!
// 4단계: 저장할지 말지 여부를 묻는 기능을 추가한다.

ex8.step5.test - ## 키보드로부터 입력 받기 - 연습4
// - 다음과 같이 사용자로부터 이름, 이메일, 전화를 입력받아 출력하시오!
// 5단계: 연락처 데이터를 저장할 새로운 데이터 타입을 만든다.

ex8.step6.test - ## 키보드로부터 입력 받기 - 연습4
// - 다음과 같이 사용자로부터 이름, 이메일, 전화를 입력받아 출력하시오!
// 6단계: 코드를 기능별로 분리하여 메서드 안에 묶어 두기 

ex8.step7.test - ## 키보드로부터 입력 받기 - 연습4
// - 다음과 같이 사용자로부터 이름, 이메일, 전화를 입력받아 출력하시오!
// 7단계: 배열에 객체의 주소를 저장하고 꺼내는 부분을 메서드로 분리한다.

ex8.step8.test - ## 키보드로부터 입력 받기 - 연습4
// - 다음과 같이 사용자로부터 이름, 이메일, 전화를 입력받아 출력하시오!
// 8단계: 예외 처리 문법을 도입하여 add()와 get(), main()에 적용한다. 
//        배열의 크기를 벗어나거나 유효하지 않은 인덱스의 값을 꺼내려 할 때 예외를 발생시킨다. 

ex8.step9.test - ## 키보드로부터 입력 받기 - 연습4
// - 다음과 같이 사용자로부터 이름, 이메일, 전화를 입력받아 출력하시오!
// 9단계: 내장 클래스 "Contact" 를 별도의 파일로 분리한다. 
//        class 문법을 새 데이터 타입을 정의하는데 사용하는 전형적인 예. 


ex8.step10.test - ## 키보드로부터 입력 받기 - 연습4
// - 다음과 같이 사용자로부터 이름, 이메일, 전화를 입력받아 출력하시오!
// 10단계: Contact 배열을 다루는 메서드를 별도의 클래스로 분류한다. 
//         class를 메서드를 분류하는 데 사용하는 전형적인 예.