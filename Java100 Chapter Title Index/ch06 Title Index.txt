ex1.Test1 - // 클래스 문법의 용도 - 사용자 정의 데이터 타입 만들기
// 클래스 문법 사용 전

ex1.Test2 & Score - // 클래스 문법의 용도 - 사용자 정의 데이터 타입 만들기
// 클래스 문법 사용 

ex1.Test3 & Score2 - // 클래스 문법의 용도 - 사용자 정의 데이터 타입 만들기
// 메서드 문법을 이용하여 클래스에 연산자 추가 


ex1.Test4 & Score3 - 클래스 문법의 용도 - 사용자 정의 데이터 타입 만들기
// 인스턴스를 만들 때 생성자 호출하기 


ex1.Test5 & Score4 - 클래스 문법의 용도 - 사용자 정의 데이터 타입 만들기
// 파라미터 값을 주는 생성자 호출하기 

ex1.Test6 & Score5 - 클래스 문법의 용도 - 사용자 정의 데이터 타입 만들기
// 여러 개의 생성자 중에서 한 개를 선택하기 

ex1.Test7 & Score6 - 클래스 문법의 용도 - 사용자 정의 데이터 타입 만들기
// 기본 생성자 호출하기 

ex1.Test8 & Score7 - 클래스 문법의 용도 - 사용자 정의 데이터 타입 만들기
// 기본 생성자 호출하기 II 

ex1.Test9 & Score8 - 클래스 문법의 용도 - 사용자 정의 데이터 타입 만들기
// 인스턴스 변수나 메서드를 사용할 때 this를 생략하기 

ex1.Test10 & Score9 - 클래스 문법의 용도 - 사용자 정의 데이터 타입 만들기
// 인스턴스 초기화 블록 실행 확인하기 

ex1.Test11 & Score10 - 클래스 문법의 용도 - 사용자 정의 데이터 타입 만들기
// 인스턴스 변수 초기화 문장의 실행 순서와 과정 

====================================================================================

ex2.Test1 - 클래스 문법의 용도 - 유지보수가 편하게 서로 관련된 메서드를 분류하는 문법
// 클래스 문법 사용 전

ex2.Test2 - 클래스 문법의 용도 - 유지보수가 편하게 서로 관련된 메서드를 분류하는 문법 II
// 클래스 문법을 사용하여 메서드 분류하기
// Test1을 ScoreDao, ScoreView, MessageBox로 분류

====================================================================================

ex3.Test1 & MyClass - 스태틱 멤버 - 클래스 로딩과 클래스 변수

ex3.Test2 & MyClass - 스태틱 멤버 - 인스턴스 변수가 생성될 때

ex3.Test3 & MyClass2 - 스태틱 멤버 - 클래스가 로딩되는 시점

ex3.Test4 & MyClass3 - 스태틱 멤버 - 스태틱 블록 실행 확인

ex3.Test5 - 스태틱 멤버 - 스태틱 멤버는 인스턴스 멤버를 사용할 수 없다.

ex3.Test6 - 스태틱 멤버 - 클래스 안에 선언된 static 클래스

ex3.Test7 - 스태틱 멤버 - 클래스 로딩과 스태틱 블록 실행 시점

====================================================================================

ex4.Test1 - 클래스 멤버와 인스턴스 멤버의 활용
// 1단계: 로컬 변수 사용 및 메서드 분리 전 

ex4.Test2 - 클래스 멤버와 인스턴스 멤버의 활용 
// 2단계: 메서드 분리 

ex4.Test3 - 클래스 멤버와 인스턴스 멤버의 활용
// 3단계: static 변수 사용 

ex4.Test4 & Calculator1 - 클래스 멤버와 인스턴스 멤버의 활용 
// 4단계: 클래스 분리

ex4.Test5 & Calculator2 - 클래스 멤버와 인스턴스 멤버의 활용 
// 5단계: static 변수의 한계

ex4.Test6 & Calculator2 - 클래스 멤버와 인스턴스 멤버의 활용 
// 6단계: 인스턴스 변수의 활용

ex4.Test6 & Calculator3 - 클래스 멤버와 인스턴스 멤버의 활용 
// 7단계: 인스턴스 메서드의 활용

====================================================================================

ex5.Test1 - 클래스 멤버와 인스턴스 멤버의 활용 2
// 1단계: 로컬 변수 사용

ex5.Test2 - 클래스 멤버와 인스턴스 멤버의 활용 2
// 2단계: 메서드 분리 및 static 변수 사용

ex5.Test3 & Score1 - 클래스 멤버와 인스턴스 멤버의 활용 2
// 3단계: 클래스 분리
//        => 관련 기능을 보다 쉽게 관리할 수 있도록 별도의 클래스로 분류한다. 


ex5.Test4 & Score2 - 클래스 멤버와 인스턴스 멤버의 활용 2
// 4단계: 여러 개의 성적 데이터를 다룰 때 문제점

ex5.Test5 & Score2 - 클래스 멤버와 인스턴스 멤버의 활용 2
// 5단계: 인스턴스 변수와 메서드를 활용하여 여러 개의 성적 데이터를 관리하기
//        => 여러 개의 인스턴스를 보관하기 위해 레퍼런스 배열을 사용한다.

====================================================================================

ex6.Test1 & Car - 스태틱 변수와 인스턴스 변수의 활용 

ex6.Test2 & Car2 - 스태틱 변수의 활용 - 상수를 사용하기 전

ex6.Test3 & Car3 - 스태틱 변수의 활용 - 상수를 사용한 후

=====================================================================================