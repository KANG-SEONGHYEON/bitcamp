Test11_1 - # 자바에서 값 표현(literal)하기
// 문자열, 정수, 부동소수점, 논리 값을 표현하는 방법

Test11_2 - # 자바에서 값 표현(literal)하기 - 문자

Test11_3 - # 자바에서 값 표현(literal)하기 - 이스케이프(escape) 문자

Test11_4 - # 자바에서 값 표현(literal)하기 - 정수의 표현

Test11_5 - # 자바에서 값 표현(literal)하기 - 정수의 자릿수 표현

Test11_6 - # 자바에서 값 표현(literal)하기 - 정수의 크기

Test11_7 - # 자바에서 값 표현(literal)하기 - 메모리에서 정수를 저장하는 방법

Test11_8 - # 자바에서 값 표현(literal)하기 - 부동소수점의 표현

Test11_9 - # 자바에서 값 표현(literal)하기 - 부동소수점을 메모리에 저장하는 방법

Test11_10 - # 자바에서 값 표현(literal)하기 - 부동소수점의 크기

Test11_11 - # 자바에서 값 표현(literal)하기 - 논리 값 표현

Test11_12 - # 자바에서 값 표현(literal)하기 - 문자열 표현

======================================================================================

Test12_1 - 메모리 준비
// 값을 저장하기 위해 메모리를 준비하는 방법을 알아보자!

Test12_2 - ## 메모리에 값 저장
// 메모리에 값을 저장하는 방법을 대해 자세히 알아보자!

Test12_3 - ## 변수 초기화 문장
//: 변수를 선언하고 값을 저장하는 다양한 방법을 알아보자!

Test12_4 - ## 상수
// - 상수의 사용법에 대해 알아보자!

Test12_5 - ## 정수 변수의 사용
// - byte, short, int, long 변수의 사용법을 알아보자!

Test12_6 - ## 자바의 최소 연산 단위 
// - 자바의 최소 연산 단위에 대해 알아보자!

Test12_7 - ## 부동소수점 변수 
// - 부동소수점을 변수에 저장하는 방법을 알아보자!

Test12_8 - ## 논리 값을 저장할 변수 
// - 논리 값을 저장할 변수를 만들고 사용하는 방법을 알아보자!

Test12_9 - ## 문자 코드 값을 저장할 변수 
// - 문자를 메모리에 저장하는 방법을 알아보자!

======================================================================================

Test13_1 - ## 배열 
// - 배열의 이점과 사용법을 알아보자!

Test13_2 - ## 배열 선언
// - 배열을 선언하는 방법을 알아보자!

Test13_3 - ## 배열의 길이와 인덱스
// - 배열의 크기와 인덱스를 다루는 방법을 배운다.

Test13_4 - ## 배열 초기화
// - 배열을 선언과 동시에 특정 값으로 초기화시키는 방법을 알아보자!

Test13_5 - ## 다양한 데이터 타입의 배열 
// - int 외에 다른 데이터 타입의 배열을 만들어 보자!

Test13_6 - ## 객체(object)와 가비지(garbage)
// - 객체와 가비지에 대한 개념을 이해하자!

Test13_7 - ## 값(value)과 레퍼런스(reference)
// - 값을 저장하는 변수와 주소를 저장하는 변수의 차이점을 이해하자!

======================================================================================

Test14_1 - ## 사용자 정의 데이터 타입 만들기
// - 여러 종류의 메모리를 묶어 새로운 타입을 만드는 방법을 알아보자!

Test14_2 - ## 사용자 정의 데이터 타입 만들기 II
// - 다음 정보를 저장할 새 데이터 타입을 정의하라!
//   도서명, 저자, 출판사, 페이지, 가격($)

Test14_3 - ## 사용자 정의 데이터 타입 만들기 III
// - 다음 정보를 저장할 새 데이터 타입을 정의하라!
//   비트캠프의 수강생 정보를 저장할 데이터 타입.

Test14_4 - ## 객체와 레퍼런스
// - 객체와 레퍼런스의 관계를 알아보자!

Test14_5 - ## 새로운 데이터 타입에 대해 사용할 연산자 만들기
// - 새 종류의 메모리를 만들었으면 그 메모리의 값을 다루는 연산자가 필요하다. 
// 즉 새 클래스의 연산자를 만드는 방법을 알아보자!

Test14_6 - ## 레퍼런스 배열
// - 배열을 이용하여 여러 객체의 주소를 관리하는 방법을 알아보자!

======================================================================================

Test15_1 - ## 연산자 - 산술연산자 사용법
// - +, -, *, /, % 등 기본 산술 연산자의 사용 방법을 알아보자!

Test15_2 - ## 연산자 - 정수의 기본 연산 단위는 int이다.
// - byte, short의 연산 결과가 int임을 확인하자!

Test15_3 - 연산자 - 다른 타입의 변수와 연산하기
// - 타입이 서로 다른 값을 연산하는 방법을 알아보자!

Test15_4 - 연산자 - 암시적 형변환으로 해결이 안되는 경우 계산 방법은?
// - 명시적으로 형변환 하는 방법을 알아보자!

Test15_5 - ## 연산자 - 증가/감소 연산자

Test15_6 - 연산자 - 연산자 우선순위
// - 연산자 우선 순위를 알아보자!

Test15_7 - 연산자 - 관계 연산자(==, !=, <, <=, >, >=)
// - 관계 연산자의 사용법을 알아보자!

Test15_8 - 연산자 - 논리 연산자(&&, ||, &, |)
// - 관계 연산자의 사용법을 알아보자!

Test15_9 - ## 연산자 - 조건 연산자 ( 조건 ? 식1 : 식2 )
// - 조건 연산자의 사용법을 알아보자!

Test15_10 - ## 연산자 - 비트 연산자 (&, |, ~, ^)
// - 비트 연산자의 사용법을 알아보자!

Test15_11_1 - ## 연산자 - 비트 연산자 (&, |, ~, ^) 응용
// - 비트 연산자의 활용 예

Test15_11_2 - ## 연산자 - 비트 연산자 (&, |, ~, ^) 응용
// - 비트 연산자의 활용 예

Test15_11_3 - ## 연산자 - 비트 연산자 (&, |, ~, ^) 응용
// - 비트 연산자의 활용 예

Test15_12_1 - ## 연산자 - 비트 이동 연산자 (>>, >>>, <<)
// - 비트 이동 연산자의 사용법을 알아보자!

Test15_12_2 - ## 연산자 - 비트 이동 연산자 (>>, >>>, <<) 응용
// - 비트 이동 연산자의 사용법을 알아보자!

Test15_13 - ## 연산자 - 복합 대입 연산자 (Compound Assignment Operator)
// - 복합 대입 연산자의 사용법을 알아보자!

Test15_14 - ## 연산자 - char 데이터와 명시적 형변환
// - 정수 값을 유니코드로 다루는 사용법을 알아보자!

======================================================================================

Test16_1 - ## 문장(Statement) - 블록과 변수의 범위
// - 블록이란? 여러 명령어를 묶는 문법이다.
// - 블록의 종류? 일반 블록, 메서드, 클래스, 인스턴스 블록, 스태틱 블록
// - 블록을 만드는 방법과 변수의 사용범위를 알아보자!

Test16_2 - ## 문장(Statement) - 분기문 if
// - 분기문의 용도와 if 문 사용법을 알아보자!

Test16_3 - ## 문장(Statement) - 분기문 switch
// - switch 문 사용법을 알아보자!

Test16_4 - ## 문장(Statement) - 반복문 while
// - while 문 사용법을 알아보자!

Test16_5 - ## 문장(Statement) - 반복문 do ~ while
// - do ~ while 문 사용법을 알아보자!

Test16_6 - ## 문장(Statement) - 반복문 for
// - for 문 사용법을 알아보자!

Test16_7 - ## 문장(Statement) - 반복문 for (:)
// - for (:) 문 사용법을 알아보자!

======================================================================================